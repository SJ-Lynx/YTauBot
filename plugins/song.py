import os
import time
import ffmpeg
import logging
import requests
import youtube_dl
from pyrogram import filters, Client, idle
from youtube_search import YoutubeSearch
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

# Convert hh:mm:ss to seconds
def time_to_seconds(time):
    stringt = str(time)
    return sum(int(x) * 60 ** i for i, x in enumerate(reversed(stringt.split(':'))))


## Commands --------
@Client.on_message(filters.command(['start']))
async def start(client, message):
       await message.reply(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.mention()}!\n–Ø, –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ, –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –º—É–∑—ã–∫—É –≤ "YouTube Music" –∏ –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –≤–∞–º, –µ—Å–ª–∏ —Å–º–æ–≥—É –µ–≥–æ –Ω–∞–π—Ç–∏! \n \n‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞, –∏ —è –ø—Ä–∏—à–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç! \n \n‚Ä¢ –Ø —Ç–∞–∫–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ YouTube \n‚Ä¢ –Ø –∏—â—É —Ç–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–∫–∏, –±–µ–∑ —Ñ–∞–Ω–∞—Ç—Å–∫–∏—Ö —Ä–µ–º–∏–∫—Å–æ–≤ –∏ –∑–∞–ø–∏—Å–µ–π —Å –¥–∏–∫—Ç–æ—Ñ–æ–Ω–∞! \n‚Ä¢ –§–æ—Ä–º–∞—Ç –¥–æ—Ä–æ–∂–∫–∏ - M4A AAC 128 –ö–±–∏—Ç/—Å. –≠—Ç–æ –∞—É—Ç–µ–Ω—Ç–∏—á–Ω—ã–π –∞—É–¥–∏–æ—Ñ–æ—Ä–º–∞—Ç –Ω–∞ YouTube.',
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton('–ö–∞–Ω–∞–ª', url='https://t.me/SJa_bots')
                ]
            ]
        )
    )
@Client.on_message(filters.text)
def a(client, message):
    query=message.text
    print(query)
    m = message.reply('–°–∫–∞—á–∏–≤–∞–Ω–∏–µ ...')
    ydl_opts = {"format": "bestaudio[ext=m4a]"}
    try:
        results = []
        count = 0
        while len(results) == 0 and count < 6:
            if count>0:
                time.sleep(1)
            results = YoutubeSearch(query, max_results=1).to_dict()
            count += 1
        # results = YoutubeSearch(query, max_results=1).to_dict()
        try:
            link = f"https://youtube.com{results[0]['url_suffix']}"
            # print(results)
            title = results[0]["title"]
            thumbnail = results[0]["thumbnails"][0]
            duration = results[0]["duration"]

            ## UNCOMMENT THIS IF YOU WANT A LIMIT ON DURATION. CHANGE 1800 TO YOUR OWN PREFFERED DURATION AND EDIT THE MESSAGE (30 minutes cap) LIMIT IN SECONDS
            # if time_to_seconds(duration) >= 1800:  # duration limit
            #     m.edit("Exceeded 30mins cap")
            #     return

            views = results[0][" "]
            thumb_name = f'thumb{message.message_id}.jpg'
            thumb = requests.get(thumbnail, allow_redirects=True)
            open(thumb_name, 'wb').write(thumb.content)

        except Exception as e:
            print(e)
            m.edit('–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ªüò¢. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ')
            return
    except Exception as e:
        m.edit(
            "–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ωüòû"
        )
        print(str(e))
        return
    m.edit("–í—ã–≥—Ä—É–∑–∫–∞...")
    try:
        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            info_dict = ydl.extract_info(link, download=False)
            audio_file = ydl.prepare_filename(info_dict)
            ydl.process_info(info_dict)
        rep =  f"**–ó–∞–≥–ª–∞–≤–∏–µ:** [{title[:35]}]({link})\n**–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** `{duration}`\n**–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:** `{views}`"
        secmul, dur, dur_arr = 1, 0, duration.split(':')
        for i in range(len(dur_arr)-1, -1, -1):
            dur += (int(dur_arr[i]) * secmul)
            secmul *= 60
        message.reply_audio(audio_file, caption=rep,quote=False, title=title, duration=dur, performer=str(info_dict["uploader"]), thumb=thumb_name)
        m.delete()
    except Exception as e:
        m.edit('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ')
        print(e)
    try:
        os.remove(audio_file)
        os.remove(thumb_name)
    except Exception as e:
        print(e)
